{"version":3,"file":"bundle.js","sources":["../lib/utils.js","../lib/error.js","../lib/hardware.js","../lib/drive.js","../lib/controls.js","../lib/default-config.js","../lib/index.js"],"sourcesContent":["/**\n * Utility functions\n *\n * @module utils\n */\n\n/**\n * Constrain input to a given range.\n *\n * @param {number} input value\n * @param {number} minimum value\n * @param {number} maximum value\n */\nexport function constrain (value, min, max) {\n  if (value < min) return min\n  if (value > max) return max\n  return value\n}\n\n/**\n * Map a value from an input range to an output range.\n *\n * @param {number} input value\n * @param {number} input range low value\n * @param {number} input range high value\n * @param {number} output range low value\n * @param {number} output range high value\n */\nexport function map (value, inputMin, inputMax, outputMin, outputMax) {\n  return (value - inputMin) * (outputMax - outputMin) / (inputMax - inputMin) + outputMin\n}\n","\nexport const SETUP = 'SETUP'\nexport const DATA = 'DATA'\n\nexport const Errors = {\n  add (type, message) {\n    console.error(type, message)\n  }\n}\n","/**\n * @module hardware\n */\nimport { constrain, map } from './utils'\nimport { Errors, SETUP, DATA } from './error'\n\n/**************************************************************\n * Hardware Configuration                                      *\n ***************************************************************/\n\nconst _configs = { }\n\n/**\n * All supported drivers and their allowed options. Options are marked\n * as true if required and false if optional.\n */\nexport const DriverOptions = {\n  DigitalInput: {\n    pin: true\n  },\n  DigitalOutput: {\n    pin: true\n  },\n  PWM_HBridge: {\n    pwmPin: true,\n    dirPin: true,\n    reverse: false\n  },\n  PWM: {\n    pwmPin: true,\n    minMicroseconds: false,\n    maxMicroseconds: false\n  }\n}\n\n/**\n *  Hardware manager\n */\nexport const Hardware = {\n  devices: { },\n\n  configure (config) {\n    // process all device names in the setup //\n    for (const deviceName in config) {\n      const device = config[deviceName]\n      // must have only one driver under the device //\n      const keys = Object.keys(device)\n      if (keys.length !== 1) {\n        Errors.add(SETUP, `Driver not defined for device: ${deviceName}`)\n        continue\n      }\n      const driverName = keys[0]\n      const options = device[driverName]\n      // validate driver options //\n      const driverOpts = DriverOptions[driverName]\n      if (!driverOpts) {\n        Errors.add(SETUP, `Unknown driver name: ${driverName}`)\n        continue\n      }\n      // check require options //\n      let errors = false\n      for (const optName in driverOpts) {\n        if (!options[optName] && driverOpts[optName]) {\n          Errors.add(SETUP, `Driver '${deviceName}.${driverName}' requires option: ${optName}`)\n          errors = true\n        }\n      }\n      // make sure no extra options declared and format is an integer //\n      for (const optName in options) {\n        if (typeof driverOpts[optName] === 'undefined') {\n          Errors.add(SETUP, `Driver '${deviceName}.${driverName}' has unsupported option: ${optName}`)\n          errors = true\n          continue\n        }\n        const value = options[optName]\n        if (!Number.isInteger(value)) {\n          Errors.add(SETUP, `Driver option '${deviceName}.${driverName}.${optName}' has invalid value: ${value}`)\n          errors = true\n        }\n      }\n      if (errors) return\n\n      _configs[deviceName] = {\n        driver: driverName,\n        options\n      }\n    }\n  },\n\n  getConfigurationJSON () {\n    // validate all devices are configured //\n    for (const deviceName in Hardware.devices) {\n      const config = _configs[deviceName]\n      if (!config) {\n        Errors.add(SETUP, `Device is not configured: ${deviceName}`)\n      }\n    }\n    return JSON.stringify(_configs)\n  },\n\n  getRequestJSON () {\n    const packet = { }\n    // get device outputs //\n    for (const deviceName in Hardware.devices) {\n      const device = Hardware.devices[deviceName]\n      if (device.getOutput) {\n        packet[deviceName] = device.getOutput()\n      }\n    }\n    return JSON.stringify(packet)\n  },\n\n  setResponseJSON (json) {\n    try {\n      const data = JSON.parse(json)\n      // write inputs to devices //\n      for (const deviceName in data) {\n        const device = Hardware.devices[deviceName]\n        if (device && device.setInput) {\n          device.setInput(data[deviceName])\n        }\n      }\n    } catch (err) {\n      Errors.add(DATA, `Invalid response JSON: '${json}'`)\n    }\n  }\n}\n\nfunction addDevice (name, device) {\n  if (Hardware.devices[name]) {\n    Errors.add(SETUP, `Device already exists: ${name}`)\n    return\n  }\n  Hardware.devices[name] = device\n}\n\n/***************************************************************\n * Device Types                                                *\n ***************************************************************/\n\n/**\n * Generic device base class.\n *\n */\nexport class Device {\n  /**\n   * Constructor\n   * @param {string} name - name of the device\n   */\n  constructor (name) {\n    this.name = name\n    this.value = 0\n    addDevice(name, this)\n  }\n\n  set (value) {\n    this.value = value\n  }\n\n  /**\n   * Get the value of the device.\n   *\n   * For output devices, this reads back the last call to 'set()', for\n   * input devices, it returns the last value read from the controller.\n   *\n   * @return {number} current value of the device\n   */\n  get () {\n    return this.value\n  }\n}\n\n/**\n * @class Motor\n *\n * Controls a motor, which is presumed to support both forward\n * reverse movement with values of -1.0 to 1.0.\n */\nexport class Motor extends Device {\n  /**\n   * Constructor\n   * @constructor\n   * @param {string} name - name of the motor\n   */\n  constructor (name) {\n    super(name)\n    this.reversed = false\n    this.set(0)\n  }\n\n  set (value) {\n    super.set(constrain(this.reversed ? -value : value, -1.0, 1.0))\n  }\n\n  getOutput () {\n    return Math.round(this.get() * 1023).toString()\n  }\n}\n\n/**\n * Servo\n *\n * Controls a servo via a PWM output. Input values are 0.0 to 1.0,\n * representing the minimum and maximum position.\n */\nexport class Servo extends Device {\n  constructor (name) {\n    super(name)\n    this.minOutput = 0.0\n    this.maxOutput = 1.0\n    this.reversed = false\n    this.set(0.5)\n  }\n\n  set (value) {\n    if (this.reversed) {\n      super.set(map(value, 0.0, 1.0, this.minOutput, this.maxOutput))\n    } else {\n      super.set(map(value, 0.0, 1.0, this.maxOutput, this.minOutput))\n    }\n  }\n\n  getOutput () {\n    return Math.round(this.get() * 1023).toString()\n  }\n}\n\n/**\n * Digital Output\n *\n * A digital output device that turns a device connected to\n * a pin, such as an LED, on and off.\n */\nexport class DigitalOutput extends Device {\n  constructor (name) {\n    super(name)\n    this.reversed = false\n    this.set(false)\n  }\n\n  set (value) {\n    super.set(!!value ^ this.reversed ? 1 : 0)\n  }\n\n  getOutput () {\n    return this.get().toString()\n  }\n}\n\n/**\n * Digital Input\n *\n * A digital input pin.\n */\nexport class DigitalInput extends Device {\n  constructor (name) {\n    super(name)\n    this.value = false\n  }\n\n  get () {\n    return this.value\n  }\n\n  setInput (value) {\n    this.value = !!value\n  }\n}\n","/**\n * Main module for driving robots. Contains implementations of the\n * common robot control schemes, such as Tank and Arcade drive.\n *\n * @module drive\n */\nimport { constrain } from './utils'\nimport { Motor } from './hardware'\n\n/**\n * Base class for a two wheel robot.\n *\n * Motors named 'leftMotor' and 'rightMotor' must be configured\n * in the hardware setup.\n */\nexport class TwoWheelDrive {\n  /**\n   * Constructor\n   */\n  constructor () {\n    this.motors = [\n      new Motor('leftMotor'),\n      new Motor('rightMotor')\n    ]\n    this.swapMotors = false\n  }\n\n  get leftMotor () {\n    return this.motors[this.swapMotors ? 1 : 0]\n  }\n  get rightMotor () {\n    return this.motors[this.swapMotors ? 1 : 0]\n  }\n\n  set reverseLeftMotor (value) {\n    this.leftMotor.reversed = value\n  }\n  set reverseRightMotor (value) {\n    this.rightMotor.reversed = value\n  }\n\n  setMotorPowers (left, right) {\n    this.leftMotor.set(constrain(left, -1.0, 1.0))\n    this.rightMotor.set(constrain(right, -1.0, 1.0))\n  }\n\n  stop () {\n    this.leftMotor.set(0)\n    this.rightMotor.set(0)\n  }\n}\n\n/**\n *  Differential 'tank' style drive where left and right wheels\n *  are controlled independently.\n *\n *  This style is harder to learn, but can offer superior control,\n *  since it is easier to steer in curves without slowing down.\n */\nexport class TankDrive extends TwoWheelDrive {\n  /**\n   *  Set left and right wheel speeds independently.\n   *\n   *  @param {number} left wheel speed [-1.0, 1.0]\n   *  @param {number} right wheel speed [-1.0, 1.0]\n   */\n  setLeftAndRightSpeed (left, right) {\n    this.setMotorPowers(left, right)\n  }\n}\n\n/**\n *  'Arcade' drive with separate control of speed and rotation.\n *\n *  This style is easier to learn for novice drivers.\n */\nexport class ArcadeDrive extends TwoWheelDrive {\n  /**\n   * Set speed and rotation\n   *\n   * @param {number} linear forward/reverse speed [-1.0, 1.0]\n   * @param {number} rotational left/right turning speed [-1.0, 1.0]\n   */\n  setSpeedAndRotation (speed, rotation) {\n    // clamp the inputs //\n    speed = constrain(speed, -1.0, 1.0)\n    if (this.speedScalar) {\n      speed = this.speedScalar.scale(speed)\n    }\n    rotation = constrain(rotation, -1.0, 1.0)\n    if (this.rotationScalar) {\n      rotation = this.rotationScalar.scale(rotation)\n    }\n\n    // mix speed and rotation signals //\n    let leftPower, rightPower\n    if (speed > 0.0) {\n      if (rotation > 0.0) {\n        leftPower = speed - rotation\n        rightPower = Math.max(speed, rotation)\n      } else {\n        leftPower = Math.max(speed, -rotation)\n        rightPower = speed + rotation\n      }\n    } else {\n      if (rotation > 0.0) {\n        leftPower = -Math.max(-speed, rotation)\n        rightPower = speed + rotation\n      } else {\n        leftPower = speed - rotation\n        rightPower = -Math.max(-speed, -rotation)\n      }\n    }\n\n    this.setMotorPowers(leftPower, rightPower)\n  }\n}\n","/**\n * Module for configurable control interface. Makes use of an HTML5\n * canvas to paint controls and handle multi-touch events.\n *\n * @module controls\n */\nimport { constrain } from './utils'\nimport { Errors, SETUP } from './error'\n\n/**************************************************************\n * TouchManager Implementation                                *\n **************************************************************/\n\nconst _touchOwners = { }\n\nfunction convertTouch (touch) {\n  return {\n    identifier: touch.identifier,\n    clientX: Math.round(touch.clientX - TouchManager.canvas.offsetLeft),\n    clientY: Math.round(touch.clientY - TouchManager.canvas.offsetTop),\n    force: touch.force\n  }\n}\n\nfunction doAdd (touch) {\n  if (typeof touch.identifier === 'undefined') touch.identifier = 'mouse'\n\n  // loop through controls and see if one captures the touch //\n  for (const controlName in TouchManager.controls) {\n    const control = TouchManager.controls[controlName]\n    touch = convertTouch(touch)\n    if (control.matchesTouch(touch)) {\n      _touchOwners[touch.identifier] = control\n      control.touch = touch\n      break\n    }\n  }\n\n  console.log('touchStart', touch, touch.identifier)\n}\n\nfunction doUpdate (touch) {\n  if (typeof touch.identifier === 'undefined') touch.identifier = 'mouse'\n  const control = _touchOwners[touch.identifier]\n  if (!control) return\n  control.touch = convertTouch(touch)\n  console.log('touchMove', touch, touch.identifier)\n}\n\nfunction doRemove (touch) {\n  if (typeof touch.identifier === 'undefined') touch.identifier = 'mouse'\n  const control = _touchOwners[touch.identifier]\n  if (!control) return\n  control.touch = null\n  delete _touchOwners[touch.identifier]\n  console.log('touchEnd', touch, touch.identifier)\n}\n\nconst FRAME_RATE = 35\nlet _oldWidth\nlet _oldHeight\nexport const TouchManager = {\n  canvas: null,\n  ctx: null,\n  intervalID: null,\n  controls: { },\n\n  setCanvas (canvas) {\n    function handleTouches (e, handler) {\n      // prevent scrolling on update //\n      if (handler === doUpdate) {\n        e.preventDefault()\n      }\n      // loop through touches //\n      for (let i = 0; i < e.changedTouches.length; i++) {\n        handler(e.changedTouches[i])\n      }\n    }\n\n    canvas.addEventListener('touchstart', (e) => handleTouches(e, doAdd), false)\n    canvas.addEventListener('touchmove', (e) => handleTouches(e, doUpdate), false)\n    canvas.addEventListener('touchend', (e) => handleTouches(e, doRemove), false)\n\n    canvas.addEventListener('mousedown', doAdd, false)\n    canvas.addEventListener('mousemove', doUpdate, false)\n    canvas.addEventListener('mouseup', doRemove, false)\n\n    TouchManager.canvas = canvas\n    TouchManager.ctx = canvas.getContext('2d')\n  },\n\n  start () {\n    TouchManager.intervalID = setInterval(\n      () => TouchManager.update(),\n      1000 / FRAME_RATE\n    )\n  },\n\n  stop () {\n    if (TouchManager.intervalID) {\n      clearInterval(TouchManager.intervalID)\n    }\n  },\n\n  update () {\n    const { canvas, ctx, controls } = TouchManager\n\n    // check for canvas resize //\n    const resized = (canvas.width !== _oldWidth || canvas.height !== _oldHeight)\n    if (resized) {\n      _oldWidth = canvas.width\n      _oldHeight = canvas.height\n    }\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    // loop through controls //\n    for (const controlName in controls) {\n      const control = controls[controlName]\n      if (resized) control.pixelCache = null\n      control.draw(ctx)\n    }\n  }\n}\n\nfunction addControl (name, control) {\n  if (TouchManager.controls[name]) {\n    Errors.add(SETUP, `Control already exists: ${name}`)\n    return\n  }\n  TouchManager.controls[name] = control\n}\n\nfunction convertToPixels (dim, value) {\n  // determine the reference dimension based on name //\n  let reference\n  switch (dim) {\n    case 'y':\n    case 'height':\n      reference = TouchManager.canvas.height\n      break\n    default:\n      reference = TouchManager.canvas.width\n      break\n  }\n\n  // handle based on type //\n  switch (typeof value) {\n    case 'number':\n      // if a fraction, assume a percent //\n      if (value > 0 && value < 1.0) {\n        value *= 100\n      }\n      return Math.round(value * reference / 100)\n    case 'string':\n      const matches = value.match(/^([0-9]+)([^0-9]*)$/)\n      if (matches) {\n        const [ , num, unit ] = matches\n        value = parseInt(num)\n        switch (unit) {\n          case '%':\n          case '':\n            return Math.round(value * reference / 100)\n          case 'px':\n            return value\n        }\n      }\n      // fallthrough //\n    default:\n      return null\n  }\n}\n\n/**************************************************************\n * Control / Graphics Classes                                 *\n **************************************************************/\n\n/**\n * Base class for all UI controls.\n */\nexport class Control {\n  constructor (name) {\n    this.name = name || `control${++Control.count}`\n\n    this.touch = null\n    this.pixelCache = null\n    addControl(name, this)\n  }\n\n  /**\n   * Implemented by subclasses to determine if they match\n   * the specified touch.\n   */\n  matchesTouch (touch) {\n    return false\n  }\n\n  /**\n   * Get the control dimensions converted to pixels relative\n   * to the current canvas size. This cached for performance reasons.\n   */\n  getPixelDimensions () {\n    if (this.pixelCache) return this.pixelCache\n    const dimensions = this.getDimensions()\n    const pixels = {}\n    for (const dimName in dimensions) {\n      pixels[dimName] = convertToPixels(dimName, dimensions[dimName])\n    }\n    console.log(this.name, pixels)\n    return (this.pixelCache = pixels)\n  }\n}\nControl.count = 0\n\n/**\n * A joystick\n */\nexport class Joystick extends Control {\n  constructor (name) {\n    super(name)\n    this.position = { x: 0, y: 0 }\n    this.radius = 10\n    this.sticky = false\n    this.style = 'white'\n  }\n\n  get x () {\n    if (!this.touch) return 0.0\n    const { x, r } = this.getPixelDimensions()\n    return (this.touch.clientX - x) / r\n  }\n\n  get y () {\n    if (!this.touch) return 0.0\n    const { y, r } = this.getPixelDimensions()\n    return (y - this.touch.clientY) / r\n  }\n\n  getDimensions () {\n    return { x: this.position.x, y: this.position.y, r: this.radius }\n  }\n\n  matchesTouch (touch) {\n    const { clientX, clientY } = touch\n    const { x, y, r } = this.getPixelDimensions()\n\n    const dx = (x - clientX)\n    const dy = (y - clientY)\n    return Math.sqrt(dx * dx + dy * dy) <= r\n  }\n\n  draw (ctx) {\n    const { x, y, r } = this.getPixelDimensions()\n\n    ctx.beginPath()\n    ctx.strokeStyle = (this.touch && this.touchedStyle) || this.style\n    ctx.lineWidth = 6\n    ctx.arc(x, y, 40, 0, Math.PI * 2, true)\n    ctx.stroke()\n\n    ctx.beginPath()\n    ctx.strokeStyle = (this.touch && this.touchedStyle) || this.style\n    ctx.lineWidth = 2\n    ctx.arc(x, y, r, 0, Math.PI * 2, true)\n    ctx.stroke()\n\n    // paint the current touch //\n    if (this.touch) {\n      const { clientX, clientY } = this.touch\n      ctx.beginPath()\n      ctx.strokeStyle = this.style\n      ctx.arc(clientX, clientY, 40, 0, Math.PI * 2, true)\n      ctx.stroke()\n    }\n\n    ctx.beginPath()\n    ctx.fillStyle = 'white'\n    ctx.fillText(\n      `joystick: ${this.name}, x: ${this.x.toFixed(3)}, y: ${this.y.toFixed(3)}`,\n      x - 50, y + 75\n    )\n  }\n}\n\n/**\n * A button\n */\nexport class Button extends Control {\n  constructor (name) {\n    super(name)\n    this.position = { x: 0, y: 0 }\n    this.radius = 10\n    this.sticky = false\n    this.style = 'white'\n  }\n\n  get pressed () {\n    return !!this.touch\n  }\n\n  getDimensions () {\n    return { x: this.position.x, y: this.position.y, r: this.radius }\n  }\n\n  matchesTouch (touch) {\n    const { clientX, clientY } = touch\n    const { x, y, r } = this.getPixelDimensions()\n\n    const dx = (x - clientX)\n    const dy = (y - clientY)\n    return Math.sqrt(dx * dx + dy * dy) <= r\n  }\n\n  draw (ctx) {\n    const { x, y, r } = this.getPixelDimensions()\n\n    ctx.beginPath()\n    ctx.strokeStyle = this.style\n    ctx.fillStyle = this.style\n    ctx.lineWidth = 6\n    ctx.arc(x, y, r, 0, Math.PI * 2, true)\n    if (this.pressed) {\n      ctx.fill()\n    } else {\n      ctx.stroke()\n    }\n  }\n}\n\n/**\n *  A slider. This is really shoddy algorithm design, and it only\n *  support strictly horizontal or vertical sliders. Major FIXME\n *  to come back and due to proper computation geometry.\n */\nexport class Slider extends Control {\n  constructor (name) {\n    super(name)\n    this.position = { x: 0, y: 0 }\n    this.radius = 10\n    this.length = 30\n    this.type = Slider.VERTICAL\n    this.sticky = true\n    this.style = 'white'\n  }\n\n  getDimensions () {\n    return {\n      x: this.position.x,\n      y: this.position.y,\n      r: this.radius,\n      l: this.length\n    }\n  }\n\n  getHelperDimensions () {\n    const { x, y, r, l } = this.getPixelDimensions()\n    if (this.type === Slider.HORIZONTAL) {\n      return {\n        x1: x,\n        x2: x + l,\n        xa: x + l,\n        y1: y - r,\n        y2: y + r,\n        ya: y\n      }\n    } else {\n      return {\n        x1: x - r,\n        x2: x + r,\n        xa: x,\n        y1: y,\n        y2: y + l,\n        ya: y + l\n      }\n    }\n  }\n\n  matchesTouch (touch) {\n    const { clientX, clientY } = touch\n    const { x, y, r } = this.getPixelDimensions()\n    const { x1, y1, x2, y2, xa, ya } = this.getHelperDimensions()\n\n    // check if in the end circles //\n    const dx = (x - clientX)\n    const dy = (y - clientY)\n    if (Math.sqrt(dx * dx + dy * dy) <= r) return true\n    const dxa = (xa - clientX)\n    const dya = (ya - clientY)\n    if (Math.sqrt(dxa * dxa + dya * dya) <= r) return true\n    console.log(clientX, xa, dxa, clientY, ya, dya)\n\n    // check if in the rectangle //\n    return (clientX >= x1) && (clientX <= x2) && (clientY >= y1) && (clientY <= y2)\n  }\n\n  draw (ctx) {\n    const { x, y, r } = this.getPixelDimensions()\n    const { x1, y1, x2, y2, xa, ya } = this.getHelperDimensions()\n\n    ctx.beginPath()\n    ctx.strokeStyle = this.style\n    ctx.lineWidth = 2\n    if (this.type === Slider.HORIZONTAL) {\n      ctx.moveTo(x1, y1)\n      ctx.lineTo(x2, y1)\n      ctx.arc(xa, ya, r, Math.PI * 3 / 2, Math.PI / 2, false)\n      ctx.moveTo(x2, y2)\n      ctx.lineTo(x1, y2)\n      ctx.arc(x, y, r, Math.PI / 2, Math.PI * 3 / 2, false)\n    } else {\n      ctx.arc(x, y, r, Math.PI, Math.PI * 2, false)\n      ctx.moveTo(x2, y1)\n      ctx.lineTo(x2, y2)\n      ctx.arc(xa, ya, r, 0, Math.PI, false)\n      ctx.moveTo(x1, y2)\n      ctx.lineTo(x1, y1)\n    }\n    ctx.stroke()\n\n    // ctx.arc(x, y, 3, 0, Math.PI * 2, true)\n    // ctx.arc(xa, ya, 3, 0, Math.PI * 2, true)\n    // ctx.stroke()\n\n    // paint the current touch //\n    if (this.touch) {\n      const { clientX, clientY } = this.touch\n      ctx.beginPath()\n      if (this.type === Slider.HORIZONTAL) {\n        ctx.arc(constrain(clientX, x, xa), y, r - 4, 0, Math.PI * 2, true)\n      } else {\n        ctx.arc(x, constrain(clientY, y, ya), r - 4, 0, Math.PI * 2, true)\n      }\n      ctx.strokeStyle = this.style\n      ctx.stroke()\n    }\n  }\n}\nSlider.HORIZONTAL = 'HORIZONTAL'\nSlider.VERTICAL = 'VERTICAL'\n","/**\n * Default hardware configuration for the kit-bot based off the\n * NodeMCU (ESP8266) and dual H-Bridge motor breakout board.\n *\n * Assumes the following wiring configuration:\n *\n *  - rightMotor: motor channel A (as judged from behind the robot)\n *  - leftMotor: Motor channel B (as judged from behind the robot)\n *\n *  Motors should be wired so that a positive voltage on the A+/B+ terminal\n *  produces forward motion.\n *\n * The default firmware also supports the following optional hardware:\n *\n *  - weaponMotor: AfroESC Brushless DC controller on pin 6\n *  - servo1: first servo on pin 7\n *  - servo2: second servo on pin 8\n */\n\nexport default {\n  rightMotor: {\n    PWM_HBridge: { pwmPin: 1, dirPin: 3 }\n  },\n  leftMotor: {\n    PWM_HBridge: { pwmPin: 2, dirPin: 4 }\n  },\n  weaponMotor: {\n    PWM: { pwmPin: 6, minMicroseconds: 900, maxMicroseconds: 1800 }\n  },\n  servo1: {\n    PWM: { pwmPin: 7 }\n  },\n  servo2: {\n    PWM: { pwmPin: 8 }\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport { Hardware, Motor, Servo, DigitalOutput, DigitalInput } from './hardware'\nimport { TankDrive, ArcadeDrive } from './drive'\nimport { Joystick, Button, Slider, TouchManager } from './controls'\n\n// set the default hardware configuration    //\n// you can call Hardware.configure() in your //\n// robot code to override this.              //\nimport defaultConfig from './default-config'\nHardware.configure(defaultConfig)\n\n// configure the HTML5 canvas //\nconst heading = document.getElementById('heading')\nconst canvas = document.getElementById('touch-canvas')\n\nfunction resizeCanvas () {\n  canvas.width = window.outerWidth\n  canvas.height = window.outerHeight - heading.clientHeight - 1\n\n  window.scrollTo(0, 0)\n}\nwindow.addEventListener('orientationchange', resizeCanvas)\nwindow.addEventListener('resize', resizeCanvas)\nresizeCanvas()\nTouchManager.setCanvas(canvas)\n\n// initialization routine //\nwindow.addEventListener('load', (e) => {\n  console.log('Loaded')\n  if (window.setup) {\n    console.log('Running setup...')\n    window.setup()\n  }\n  console.log(JSON.parse(Hardware.getConfigurationJSON()), Hardware.devices)\n\n  // start the UI control loop //\n  TouchManager.start()\n})\n"],"names":["const","let","optName","super"],"mappings":"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"}