{"version":3,"file":"bundle.js","sources":["../lib/utils.js","../lib/hardware.js","../lib/drive.js","../lib/controls.js","../lib/connection.js","../lib/index.js"],"sourcesContent":["/**\n * Utility functions\n *\n * @module utils\n */\n/* globals XMLHttpRequest */\n\n/**\n * Constrain input to a given range.\n *\n * @param {number} value - input value\n * @param {number} min - minimum value\n * @param {number} max - maximum value\n */\nexport function constrain (value, min, max) {\n  if (value < min) return min\n  if (value > max) return max\n  return value\n}\n\n/**\n * Map a value from an input range to an output range.\n *\n * @param {number} value - input value\n * @param {number} inputMin - input range low value\n * @param {number} inputMax - input range high value\n * @param {number} outputMin - output range low value\n * @param {number} outputMax - output range high value\n */\nexport function map (value, inputMin, inputMax, outputMin, outputMax) {\n  return (value - inputMin) * (outputMax - outputMin) / (inputMax - inputMin) + outputMin\n}\n\n/**\n * General AJAX call.\n *\n * @param {string} method - HTTP method\n * @param {string} url - url to call\n * @param {string|object} data - data to send, will be stringified if JSON\n * @param {number?} timeout - timeout in milliseconds\n * @param {string} callback - (err, data)\n */\nexport function ajax (method, url, data, timeout, callback) {\n  if (typeof timeout === 'function') {\n    callback = timeout\n    timeout = undefined\n  }\n\n  // get the response //\n  const getResponse = (xhr, data) => ({\n    status: xhr.status,\n    statusText: xhr.statusText,\n    data,\n    xhr\n  })\n\n  // create request //\n  const xhr = new XMLHttpRequest()\n  xhr.open(method, url, true)\n  xhr.timeout = timeout\n  xhr.addEventListener('load', () => {\n    if (xhr.status >= 200 && xhr.status < 300) {\n      callback(null, getResponse(xhr, xhr.responseText))\n    } else {\n      callback(new Error(`${xhr.status} - ${xhr.statusText}`), getResponse(xhr))\n    }\n  })\n  xhr.addEventListener('error', (e) => callback(new Error('Request failed'), getResponse(xhr)))\n  xhr.addEventListener('timeout', () => callback(new Error('Request timeout'), getResponse(xhr)))\n\n  if (data) {\n    xhr.send(typeof data !== 'string' ? JSON.stringify(data) : data)\n  } else {\n    xhr.send()\n  }\n}\n\n/**\n * XHR wrapper to simplify AJAX GET calls.\n *\n * @param {string} url - url to call\n * @param {string} callback - (err, data)\n */\nexport function ajaxGet (url, timeout, callback) {\n  return ajax('GET', url, null, timeout, callback)\n}\n\n/**\n * XHR wrapper to simplify AJAX PUT calls.\n *\n *\n */\nexport function ajaxPut (url, data, timeout, callback) {\n  return ajax('PUT', url, data, timeout, callback)\n}\n","/**\n * Hardware interface layer used by end-user code. Allows for creation of\n * logical devices, such as motors and servos, separate from their physical\n * config. This lets the same code be used across different robots and frees\n * novices of having to deal with hardware configuration for \"kit\" robots.\n *\n * @module hardware\n */\nimport { constrain, map } from './utils'\n\n/**************************************************************\n * HardwareManager Implementation                             *\n **************************************************************/\n\n/**\n *  Hardware manager\n */\nexport const HardwareManager = {\n  devices: { },\n  config: null,\n\n  /**\n   * Validate the hardware configuration. Returns an array of any errors.\n   * This method makes sure the robot only defines logical devices that are\n   * configured in the hardware.\n   *\n   * @return {array} - any errors in configuration, or null if no errors\n   */\n  validateConfig () {\n    // error collection //\n    const errors = [ ]\n    const addError = (message) => errors.push({ type: 'HARDWARE', message })\n\n    // configuration must be set //\n    if (!HardwareManager.config) {\n      addError('Hardware configuration not set')\n    } else if (!HardwareManager.config.devices) {\n      addError('Hardware configuration is missing devices')\n    }\n    if (errors.length) return errors\n\n    // validate all logical devices are configured //\n    for (const deviceName in HardwareManager.devices) {\n      const device = HardwareManager.devices[deviceName]\n      const config = HardwareManager.config.devices[deviceName]\n      if (config) {\n        // make sure the driver is known //\n        const driverName = config.driver\n        if (!device.supportsDriver(driverName)) {\n          errors.push(`Device ${deviceName} has invalid driver: ${driverName}`)\n        }\n      } else {\n        // logical device name has no configuration onboard robot //\n        addError(`Device has no configuration: ${deviceName}`)\n      }\n    }\n\n    return (errors.length) ? errors : null\n  },\n\n  /**\n   *\n   * @return {object} - values for all output devices\n   */\n  getOutputs () {\n    const packet = { }\n    // get device outputs //\n    for (const deviceName in HardwareManager.devices) {\n      const device = HardwareManager.devices[deviceName]\n      if (device.getOutput) {\n        packet[deviceName] = device.getOutput()\n      }\n    }\n    return packet\n  },\n\n  /**\n   * Set the values of named input devices. This method is called\n   * with raw values received from the robot.\n   *\n   * @param {object} values - values of all input devices\n   */\n  setInputs (values) {\n    // write inputs to devices //\n    for (const deviceName in values) {\n      const device = HardwareManager.devices[deviceName]\n      if (device && device.setInput) {\n        device.setInput(values[deviceName])\n      }\n    }\n  }\n}\n\nfunction addDevice (name, device) {\n  if (HardwareManager.devices[name]) {\n    throw new Error(`Device already exists: ${name}`)\n  }\n  HardwareManager.devices[name] = device\n}\n\n/***************************************************************\n * Device Types                                                *\n ***************************************************************/\n\n/**\n * Generic device base class.\n *\n */\nexport class Device {\n  /**\n   * Constructor\n   * @param {string} name - name of the device\n   */\n  constructor (name) {\n    this.name = name\n    this.value = 0\n    addDevice(name, this)\n  }\n\n  set (value) {\n    this.value = value\n  }\n\n  /**\n   * Get the value of the device.\n   *\n   * For output devices, this reads back the last call to 'set()', for\n   * input devices, it returns the last value read from the controller.\n   *\n   * @return {number} current value of the device\n   */\n  get () {\n    return this.value\n  }\n\n  /**\n   * Tests whether a device supports the specified driver.\n   */\n  supportsDriver (driverName) {\n    return false\n  }\n}\n\n/**\n * @class Motor\n *\n * Controls a motor, which is presumed to support both forward\n * reverse movement with values of -1.0 to 1.0.\n */\nexport class Motor extends Device {\n  /**\n   * Constructor\n   * @constructor\n   * @param {string} name - name of the motor\n   */\n  constructor (name) {\n    super(name)\n    this.reversed = false\n    this.set(0)\n  }\n\n  set (value) {\n    super.set(constrain(this.reversed ? -value : value, -1.0, 1.0))\n  }\n\n  getOutput () {\n    return Math.round(this.get() * 1023).toString()\n  }\n\n  supportsDriver (driverName) {\n    return [ 'PWM_HBRIDGE', 'PWM' ].indexOf(driverName) !== -1\n  }\n}\n\n/**\n * Servo\n *\n * Controls a servo via a PWM output. Input values are 0.0 to 1.0,\n * representing the minimum and maximum position.\n */\nexport class Servo extends Device {\n  constructor (name) {\n    super(name)\n    this.minOutput = 0.0\n    this.maxOutput = 1.0\n    this.reversed = false\n    this.set(0.5)\n  }\n\n  set (value) {\n    if (this.reversed) {\n      super.set(map(value, 0.0, 1.0, this.minOutput, this.maxOutput))\n    } else {\n      super.set(map(value, 0.0, 1.0, this.maxOutput, this.minOutput))\n    }\n  }\n\n  getOutput () {\n    return Math.round(this.get() * 1023).toString()\n  }\n\n  supportsDriver (driverName) {\n    return [ 'PWM' ].indexOf(driverName) !== -1\n  }\n}\n\n/**\n * Digital Output\n *\n * A digital output device that turns a device connected to\n * a pin, such as an LED, on and off.\n */\nexport class DigitalOutput extends Device {\n  constructor (name) {\n    super(name)\n    this.reversed = false\n    this.set(false)\n  }\n\n  set (value) {\n    super.set(!!value ^ this.reversed ? 1 : 0)\n  }\n\n  getOutput () {\n    return this.get().toString()\n  }\n\n  supportsDriver (driverName) {\n    return [ 'DIGITAL_OUT' ].indexOf(driverName) !== -1\n  }\n}\n\n/**\n * Digital Input\n *\n * A digital input pin.\n */\nexport class DigitalInput extends Device {\n  constructor (name) {\n    super(name)\n    this.value = false\n  }\n\n  get () {\n    return this.value\n  }\n\n  setInput (value) {\n    this.value = !!value\n  }\n\n  supportsDriver (driverName) {\n    return [ 'DIGITAL_IN' ].indexOf(driverName) !== -1\n  }\n}\n","/**\n * Main module for driving robots. Contains implementations of the\n * common robot control schemes, such as Tank and Arcade drive.\n *\n * @module drive\n */\nimport { constrain } from './utils'\nimport { Motor } from './hardware'\n\n/**\n * Base class for a two wheel robot.\n *\n * Motors named 'leftMotor' and 'rightMotor' must be configured\n * in the hardware setup.\n */\nexport class TwoWheelDrive {\n  /**\n   * Constructor\n   */\n  constructor (leftMotor, rightMotor) {\n    this.motors = [\n      leftMotor || new Motor('leftMotor'),\n      rightMotor || new Motor('rightMotor')\n    ]\n    this.swapMotors = false\n  }\n\n  get leftMotor () {\n    return this.motors[this.swapMotors ? 1 : 0]\n  }\n  get rightMotor () {\n    return this.motors[this.swapMotors ? 0 : 1]\n  }\n\n  set reverseLeftMotor (value) {\n    this.leftMotor.reversed = value\n  }\n  set reverseRightMotor (value) {\n    this.rightMotor.reversed = value\n  }\n\n  setMotorPowers (left, right) {\n    this.leftMotor.set(constrain(left, -1.0, 1.0))\n    this.rightMotor.set(constrain(right, -1.0, 1.0))\n  }\n\n  stop () {\n    this.leftMotor.set(0)\n    this.rightMotor.set(0)\n  }\n}\n\n/**\n *  Differential 'tank' style drive where left and right wheels\n *  are controlled independently.\n *\n *  This style is harder to learn, but can offer superior control,\n *  since it is easier to steer in curves without slowing down.\n */\nexport class TankDrive extends TwoWheelDrive {\n  /**\n   *  Set left and right wheel speeds independently.\n   *\n   *  @param {number} left wheel speed [-1.0, 1.0]\n   *  @param {number} right wheel speed [-1.0, 1.0]\n   */\n  setLeftAndRightSpeed (left, right) {\n    this.setMotorPowers(left, right)\n  }\n}\n\n/**\n *  'Arcade' drive with separate control of speed and rotation.\n *\n *  This style is easier to learn for novice drivers.\n */\nexport class ArcadeDrive extends TwoWheelDrive {\n  /**\n   * Set speed and rotation\n   *\n   * @param {number} linear forward/reverse speed [-1.0, 1.0]\n   * @param {number} rotational left/right turning speed [-1.0, 1.0]\n   */\n  setSpeedAndRotation (speed, rotation) {\n    // clamp the inputs //\n    speed = constrain(speed, -1.0, 1.0)\n    if (this.speedScalar) {\n      speed = this.speedScalar.scale(speed)\n    }\n    rotation = constrain(rotation, -1.0, 1.0)\n    if (this.rotationScalar) {\n      rotation = this.rotationScalar.scale(rotation)\n    }\n\n    // mix speed and rotation signals //\n    let leftPower, rightPower\n    if (speed > 0.0) {\n      if (rotation > 0.0) {\n        leftPower = speed - rotation\n        rightPower = Math.max(speed, rotation)\n      } else {\n        leftPower = Math.max(speed, -rotation)\n        rightPower = speed + rotation\n      }\n    } else {\n      if (rotation > 0.0) {\n        leftPower = -Math.max(-speed, rotation)\n        rightPower = speed + rotation\n      } else {\n        leftPower = speed - rotation\n        rightPower = -Math.max(-speed, -rotation)\n      }\n    }\n\n    this.setMotorPowers(leftPower, rightPower)\n  }\n}\n","/**\n * Module for configurable control interface. Makes use of an HTML5\n * canvas to paint controls and handle multi-touch events.\n *\n * @module controls\n */\nimport { constrain } from './utils'\n\n/**************************************************************\n * ControlManager Implementation                              *\n **************************************************************/\n\nconst _touchOwners = { }\n\nfunction convertTouch (touch) {\n  return {\n    identifier: touch.identifier,\n    clientX: Math.round(touch.clientX - ControlManager.canvas.offsetLeft),\n    clientY: Math.round(touch.clientY - ControlManager.canvas.offsetTop),\n    force: touch.force\n  }\n}\n\nfunction doAdd (touch) {\n  if (typeof touch.identifier === 'undefined') touch.identifier = 'mouse'\n\n  // loop through controls and see if one captures the touch //\n  for (const controlName in ControlManager.controls) {\n    const control = ControlManager.controls[controlName]\n    if (control.matchesTouch(touch)) {\n      _touchOwners[touch.identifier] = control\n      control.touch = convertTouch(touch)\n      ControlManager.update()\n      break\n    }\n  }\n\n  console.log('touchStart', touch, touch.identifier)\n}\n\nfunction doUpdate (touch) {\n  if (typeof touch.identifier === 'undefined') touch.identifier = 'mouse'\n  const control = _touchOwners[touch.identifier]\n  if (!control) return\n  control.touch = convertTouch(touch)\n  console.log('touchMove', touch, touch.identifier)\n  ControlManager.update()\n}\n\nfunction doRemove (touch) {\n  if (typeof touch.identifier === 'undefined') touch.identifier = 'mouse'\n  const control = _touchOwners[touch.identifier]\n  if (!control) return\n  control.touch = null\n  delete _touchOwners[touch.identifier]\n  console.log('touchEnd', touch, touch.identifier)\n  ControlManager.update()\n}\n\nconst FRAME_RATE = 35\nlet _oldWidth\nlet _oldHeight\nexport const ControlManager = {\n  canvas: null,\n  ctx: null,\n  intervalID: null,\n  controls: { },\n  onupdate: null,\n\n  setCanvas (canvas) {\n    function handleTouches (e, handler) {\n      // prevent scrolling on update //\n      if (handler === doUpdate) {\n        e.preventDefault()\n      }\n      // loop through touches //\n      for (let i = 0; i < e.changedTouches.length; i++) {\n        handler(e.changedTouches[i])\n      }\n    }\n\n    canvas.addEventListener('touchstart', (e) => handleTouches(e, doAdd), false)\n    canvas.addEventListener('touchmove', (e) => handleTouches(e, doUpdate), false)\n    canvas.addEventListener('touchend', (e) => handleTouches(e, doRemove), false)\n\n    canvas.addEventListener('mousedown', doAdd, false)\n    canvas.addEventListener('mousemove', doUpdate, false)\n    canvas.addEventListener('mouseup', doRemove, false)\n\n    ControlManager.canvas = canvas\n    ControlManager.ctx = canvas.getContext('2d')\n  },\n\n  start () {\n    ControlManager.intervalID = setInterval(\n      () => ControlManager.draw(),\n      1000 / FRAME_RATE\n    )\n  },\n\n  stop () {\n    if (ControlManager.intervalID) {\n      clearInterval(ControlManager.intervalID)\n    }\n  },\n\n  update () {\n    const { onupdate } = ControlManager\n    if (typeof onupdate === 'function') {\n      onupdate()\n    }\n  },\n\n  draw () {\n    const { canvas, ctx, controls } = ControlManager\n\n    // check for canvas resize //\n    const resized = (canvas.width !== _oldWidth || canvas.height !== _oldHeight)\n    if (resized) {\n      _oldWidth = canvas.width\n      _oldHeight = canvas.height\n    }\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    // loop through controls //\n    for (const controlName in controls) {\n      const control = controls[controlName]\n      if (resized) control.pixelCache = null\n      control.draw(ctx)\n    }\n  }\n}\n\nfunction addControl (name, control) {\n  if (ControlManager.controls[name]) {\n    throw new Error(`Control already exists: ${name}`)\n  }\n  ControlManager.controls[name] = control\n}\n\nfunction convertToPixels (dim, value) {\n  // determine the reference dimension based on name //\n  let reference\n  switch (dim) {\n    case 'y':\n    case 'height':\n      reference = ControlManager.canvas.height\n      break\n    default:\n      reference = ControlManager.canvas.width\n      break\n  }\n\n  // handle based on type //\n  switch (typeof value) {\n    case 'number':\n      // if a fraction, assume a percent //\n      if (value > 0 && value < 1.0) {\n        value *= 100\n      }\n      return Math.round(value * reference / 100)\n    case 'string':\n      const matches = value.match(/^([0-9]+)([^0-9]*)$/)\n      if (matches) {\n        const [ , num, unit ] = matches\n        value = parseInt(num)\n        switch (unit) {\n          case '%':\n          case '':\n            return Math.round(value * reference / 100)\n          case 'px':\n            return value\n        }\n      }\n      // fallthrough //\n    default:\n      return null\n  }\n}\n\n/**************************************************************\n * Control / Graphics Classes                                 *\n **************************************************************/\n\n/**\n * Base class for all UI controls.\n */\nexport class Control {\n  constructor (name) {\n    this.name = name || `control${++Control.count}`\n\n    this.touch = null\n    this.pixelCache = null\n    addControl(name, this)\n  }\n\n  /**\n   * Implemented by subclasses to determine if they match\n   * the specified touch.\n   */\n  matchesTouch (touch) {\n    return false\n  }\n\n  /**\n   * Get the control dimensions converted to pixels relative\n   * to the current canvas size. This cached for performance reasons.\n   */\n  getPixelDimensions () {\n    if (this.pixelCache) return this.pixelCache\n    const dimensions = this.getDimensions()\n    const pixels = {}\n    for (const dimName in dimensions) {\n      pixels[dimName] = convertToPixels(dimName, dimensions[dimName])\n    }\n    console.log(this.name, pixels)\n    return (this.pixelCache = pixels)\n  }\n}\nControl.count = 0\n\n/**\n * A joystick\n */\nexport class Joystick extends Control {\n  constructor (name) {\n    super(name)\n    this.position = { x: 0, y: 0 }\n    this.radius = 10\n    this.sticky = false\n    this.style = 'white'\n  }\n\n  get x () {\n    if (!this.touch) return 0.0\n    const { x, r } = this.getPixelDimensions()\n    return (x - this.touch.clientX) / r\n  }\n\n  get y () {\n    if (!this.touch) return 0.0\n    const { y, r } = this.getPixelDimensions()\n    return (y - this.touch.clientY) / r\n  }\n\n  getDimensions () {\n    return { x: this.position.x, y: this.position.y, r: this.radius }\n  }\n\n  matchesTouch (touch) {\n    const { clientX, clientY } = touch\n    const { x, y, r } = this.getPixelDimensions()\n\n    const dx = (x - clientX)\n    const dy = (y - clientY)\n    return Math.sqrt(dx * dx + dy * dy) <= r\n  }\n\n  draw (ctx) {\n    const { x, y, r } = this.getPixelDimensions()\n\n    ctx.beginPath()\n    ctx.strokeStyle = (this.touch && this.touchedStyle) || this.style\n    ctx.lineWidth = 6\n    ctx.arc(x, y, 40, 0, Math.PI * 2, true)\n    ctx.stroke()\n\n    ctx.beginPath()\n    ctx.strokeStyle = (this.touch && this.touchedStyle) || this.style\n    ctx.lineWidth = 2\n    ctx.arc(x, y, r, 0, Math.PI * 2, true)\n    ctx.stroke()\n\n    // paint the current touch //\n    if (this.touch) {\n      const { clientX, clientY } = this.touch\n      ctx.beginPath()\n      ctx.strokeStyle = this.style\n      ctx.arc(clientX, clientY, 40, 0, Math.PI * 2, true)\n      ctx.stroke()\n    }\n\n    ctx.beginPath()\n    ctx.fillStyle = 'white'\n    ctx.fillText(\n      `joystick: ${this.name}, x: ${this.x.toFixed(3)}, y: ${this.y.toFixed(3)}`,\n      x - 50, y + 75\n    )\n  }\n}\n\n/**\n * A button\n */\nexport class Button extends Control {\n  constructor (name) {\n    super(name)\n    this.position = { x: 0, y: 0 }\n    this.radius = 10\n    this.sticky = false\n    this.style = 'white'\n  }\n\n  get pressed () {\n    return !!this.touch\n  }\n\n  getDimensions () {\n    return { x: this.position.x, y: this.position.y, r: this.radius }\n  }\n\n  matchesTouch (touch) {\n    const { clientX, clientY } = touch\n    const { x, y, r } = this.getPixelDimensions()\n\n    const dx = (x - clientX)\n    const dy = (y - clientY)\n    return Math.sqrt(dx * dx + dy * dy) <= r\n  }\n\n  draw (ctx) {\n    const { x, y, r } = this.getPixelDimensions()\n\n    ctx.beginPath()\n    ctx.strokeStyle = this.style\n    ctx.fillStyle = this.style\n    ctx.lineWidth = 6\n    ctx.arc(x, y, r, 0, Math.PI * 2, true)\n    if (this.pressed) {\n      ctx.fill()\n    } else {\n      ctx.stroke()\n    }\n  }\n}\n\n/**\n *  A slider. This is really shoddy algorithm design, and it only\n *  support strictly horizontal or vertical sliders. Major FIXME\n *  to come back and due to proper computation geometry.\n */\nexport class Slider extends Control {\n  constructor (name) {\n    super(name)\n    this.position = { x: 0, y: 0 }\n    this.radius = 10\n    this.length = 30\n    this.type = Slider.VERTICAL\n    this.sticky = true\n    this.style = 'white'\n  }\n\n  getDimensions () {\n    return {\n      x: this.position.x,\n      y: this.position.y,\n      r: this.radius,\n      l: this.length\n    }\n  }\n\n  getHelperDimensions () {\n    const { x, y, r, l } = this.getPixelDimensions()\n    if (this.type === Slider.HORIZONTAL) {\n      return {\n        x1: x,\n        x2: x + l,\n        xa: x + l,\n        y1: y - r,\n        y2: y + r,\n        ya: y\n      }\n    } else {\n      return {\n        x1: x - r,\n        x2: x + r,\n        xa: x,\n        y1: y,\n        y2: y + l,\n        ya: y + l\n      }\n    }\n  }\n\n  matchesTouch (touch) {\n    const { clientX, clientY } = touch\n    const { x, y, r } = this.getPixelDimensions()\n    const { x1, y1, x2, y2, xa, ya } = this.getHelperDimensions()\n\n    // check if in the end circles //\n    const dx = (x - clientX)\n    const dy = (y - clientY)\n    if (Math.sqrt(dx * dx + dy * dy) <= r) return true\n    const dxa = (xa - clientX)\n    const dya = (ya - clientY)\n    if (Math.sqrt(dxa * dxa + dya * dya) <= r) return true\n    console.log(clientX, xa, dxa, clientY, ya, dya)\n\n    // check if in the rectangle //\n    return (clientX >= x1) && (clientX <= x2) && (clientY >= y1) && (clientY <= y2)\n  }\n\n  draw (ctx) {\n    const { x, y, r } = this.getPixelDimensions()\n    const { x1, y1, x2, y2, xa, ya } = this.getHelperDimensions()\n\n    ctx.beginPath()\n    ctx.strokeStyle = this.style\n    ctx.lineWidth = 2\n    if (this.type === Slider.HORIZONTAL) {\n      ctx.moveTo(x1, y1)\n      ctx.lineTo(x2, y1)\n      ctx.arc(xa, ya, r, Math.PI * 3 / 2, Math.PI / 2, false)\n      ctx.moveTo(x2, y2)\n      ctx.lineTo(x1, y2)\n      ctx.arc(x, y, r, Math.PI / 2, Math.PI * 3 / 2, false)\n    } else {\n      ctx.arc(x, y, r, Math.PI, Math.PI * 2, false)\n      ctx.moveTo(x2, y1)\n      ctx.lineTo(x2, y2)\n      ctx.arc(xa, ya, r, 0, Math.PI, false)\n      ctx.moveTo(x1, y2)\n      ctx.lineTo(x1, y1)\n    }\n    ctx.stroke()\n\n    // ctx.arc(x, y, 3, 0, Math.PI * 2, true)\n    // ctx.arc(xa, ya, 3, 0, Math.PI * 2, true)\n    // ctx.stroke()\n\n    // paint the current touch //\n    if (this.touch) {\n      const { clientX, clientY } = this.touch\n      ctx.beginPath()\n      if (this.type === Slider.HORIZONTAL) {\n        ctx.arc(constrain(clientX, x, xa), y, r - 4, 0, Math.PI * 2, true)\n      } else {\n        ctx.arc(x, constrain(clientY, y, ya), r - 4, 0, Math.PI * 2, true)\n      }\n      ctx.strokeStyle = this.style\n      ctx.stroke()\n    }\n  }\n}\nSlider.HORIZONTAL = 'HORIZONTAL'\nSlider.VERTICAL = 'VERTICAL'\n","/**\n * Base module for control connections. Presents the public API for both\n * sending commands to the robot and querying the connection status.\n *\n * @module connection-base\n */\n\n/* global WebSocket */\nimport { ajaxPut } from './utils'\n\n/**\n * Base interface for connection to robot. This hides the differences\n * between the AJAX and WebSocket communication modes.\n *\n * Implements a buffered asynchronous connection. External sources should\n * call setRobotData() whenever new data is available. It will be sent to the robot\n * at the fasted rate the connection will allow.\n */\nexport class Connection {\n  constructor () {\n    this.state = Connection.DISCONNECTED\n    this.enabled = false\n    // response information //\n    this.lastError = null\n    this.responseData = null\n    // event handlers //\n    this.onstatechange = null\n    this.onresponsedata = null\n  }\n\n  start () {\n    this.enabled = true\n  }\n\n  stop () {\n    this.enabled = false\n  }\n\n  /**\n   * Update the connection state and notify listeners.\n   */\n  setState (newState) {\n    if (newState === this.state) return\n    const oldState = this.state\n    this.state = newState\n\n    // notify listener //\n    if (typeof this.onstatechange === 'function') {\n      this.onstatechange(newState, oldState)\n    }\n  }\n\n  setRobotData (data) {\n    this.dataPacket = (typeof data === 'string') ? data : JSON.stringify(data)\n  }\n\n  getResponseData () {\n    return this.responseData\n  }\n\n  setResponseData (data) {\n    this.responseData = data\n\n    // notify listener //\n    if (typeof this.onresponsedata === 'function') {\n      this.onresponsedata(data)\n    }\n  }\n}\nConnection.CONNECTED = 'Connected'\nConnection.CONNECTING = 'Connecting'\nConnection.DISCONNECTED = 'Disconnected'\nConnection.ERROR = 'Error'\n\n/**\n * Robot connection implemented with repetitive AJAX PUTs. In\n * practice, this method is limited to 10-15Hz, but is a lowest\n * common denominator supported by nearly all devices.\n */\nexport class AjaxConnection extends Connection {\n  /**\n   * Constructor.\n   *\n   * @param {number} connection timeout in milliseconds\n   */\n  constructor (timeoutMillis) {\n    super()\n    this.timeoutMillis = timeoutMillis || 500\n    this.timerId = null\n  }\n\n  /**\n   *  Poll the robot in a continuous loop.\n   */\n  poll () {\n    const pollStart = new Date()\n    ajaxPut('/control?body=' + this.dataPacket, this.dataPacket, this.timeoutMillis, (err, res) => {\n      // was the loop terminated? //\n      this.lastError = err\n      if (this.state === Connection.DISCONNECTED) {\n        this.updateRate = 0\n        return\n      }\n\n      // handle response //\n      if (!this.lastError) {\n        if (this.state !== Connection.CONNECTED) {\n          this.setState(Connection.CONNECTED)\n        }\n        this.setResponseData(res.data)\n      } else {\n        this.setState(Connection.ERROR)\n      }\n\n      // poll again //\n      const pollMs = (this.state === Connection.ERROR) ? 1000 : 50 // back off if error //\n      this.timerId = setTimeout(this.poll.bind(this), pollMs)\n\n      // compute update rate //\n      var delayMs = new Date().getTime() - pollStart.getTime()\n      if (delayMs > 0) {\n        this.updateRate = Math.floor(1000 / delayMs)\n      }\n    })\n  }\n\n  start () {\n    this.setState(Connection.CONNECTING)\n    super.start()\n    this.poll()\n  }\n\n  stop () {\n    if (this.timerId) clearTimeout(this.timerId)\n    super.stop()\n    this.setState(Connection.DISCONNECTED)\n  }\n}\n\n/**\n * Robot connection implemented with a WebSocket. This connection allows\n * for higher update rates, but it requires a modern phone OS / browser.\n */\nexport class WebSocketConnection extends Connection {\n  /**\n   * Constructor.\n   *\n   * @param {number} connection timeout in milliseconds\n   */\n  constructor (hostName) {\n    super()\n    const { hostname, port } = document.location\n    this.hostName = hostName || (port !== 80) ? `${hostname}:${port}` : hostname\n    this.socket = null\n  }\n\n  start () {\n    this.setState(Connection.CONNECTING)\n    super.start()\n\n    this.socket = new WebSocket(`ws://${this.hostName}/ws`, [ 'arduino' ])\n    this.socket.onopen = () => {\n      this.setState(Connection.CONNECTED)\n    }\n    this.socket.onerror = (err) => {\n      this.lastError = err\n      this.setState(Connection.ERROR)\n    }\n    this.socket.onmessage = (event) => {\n      this.setResponseData(event.data)\n    }\n    this.socket.onclose = (event) => {\n      if (this.state !== Connection.ERROR) {\n        this.lastError = new Error('Connection lost')\n        this.setState(Connection.ERROR)\n        this.socket = null\n      }\n    }\n  }\n\n  stop () {\n    if (this.socket) {\n      if (this.socket.readyState === WebSocket.OPEN) {\n        this.socket.close()\n      }\n      this.socket = null\n    }\n    super.stop()\n    this.setState(Connection.DISCONNECTED)\n  }\n\n  setRobotData (data) {\n    super.setRobotData(data)\n\n    // send an update //\n    if (this.socket && this.state === Connection.CONNECTED) {\n      // verify WebSocket state //\n      if (this.socket.readyState !== WebSocket.OPEN) {\n        this.lastError = new Error(`Invalid socket state: ${\n            (this.socket.readyState === WebSocket.CONNECTING) ? 'CONNECTING'\n          : (this.socket.readyState === WebSocket.CLOSING) ? 'CLOSING'\n          : (this.socket.readyState === WebSocket.CLOSED) ? 'CLOSED'\n          : 'UNKNOWN'\n        }`)\n        this.setState(Connection.ERROR)\n        return\n      }\n      try {\n        this.socket.send(this.dataPacket)\n      } catch (err) {\n        this.lastError = err\n        this.setState(Connection.ERROR)\n      }\n    }\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport { HardwareManager, Motor, Servo, DigitalOutput, DigitalInput } from './hardware'\nimport { TankDrive, ArcadeDrive } from './drive'\nimport { Joystick, Button, Slider, ControlManager } from './controls'\nimport { AjaxConnection, WebSocketConnection, Connection } from './connection'\nimport { ajaxGet } from './utils'\n\n// get HTML elements //\nconst heading = document.getElementById('heading')\nconst statusIcon = document.getElementById('status-box')\nconst statusText = document.getElementById('status-text')\nconst errorBox = document.getElementById('error-box')\nconst canvas = document.getElementById('touch-canvas')\n\n// configure the ControlManager HTML5 canvas //\nconst resizeCanvas = () => {\n  canvas.width = window.innerWidth\n  canvas.height = window.innerHeight - heading.clientHeight - 1\n\n  window.scrollTo(0, 0)\n}\nwindow.addEventListener('orientationchange', resizeCanvas)\nwindow.addEventListener('resize', resizeCanvas)\nresizeCanvas()\nControlManager.setCanvas(canvas)\n\n// add an error to error box //\nfunction addError ({ type, message }) {\n  const eline = document.createElement('li')\n  eline.className = type\n  // error type //\n  const tspan = document.createElement('span')\n  tspan.className = 'type'\n  tspan.innerText = type\n  eline.appendChild(tspan)\n  // error message //\n  const mspan = document.createElement('span')\n  mspan.className = 'message'\n  mspan.innerText = message\n  eline.appendChild(mspan)\n  errorBox.appendChild(eline)\n}\n\nfunction clearErrors (type) {\n  const els = type\n    ? errorBox.getElementsByClassName(type)\n    : errorBox.getElementByTagName('ul')\n  for (let i = 0; i < els.length; i++) {\n    els[i].remove()\n  }\n}\n\n// set UI connection state //\nfunction setConnectionState (state) {\n  console.log('Connection state:', state)\n  switch (state) {\n    case Connection.DISCONNECTED:\n    case Connection.CONNECTING:\n      statusIcon.style.backgroundColor = 'yellow'\n      break\n    case Connection.CONNECTED:\n      statusIcon.style.backgroundColor = 'green'\n      break\n    default:\n      statusIcon.style.backgroundColor = 'red'\n      break\n  }\n  statusText.innerText = state\n}\n\n// initialize the application //\nconst getHardwareConfig = new Promise((resolve, reject) =>\n  ajaxGet('./hardware.json', (err, resp) => {\n    if (err) return reject(err)\n    resolve(JSON.parse(resp.data))\n  })\n)\nconst waitForLoad = new Promise((resolve, reject) => {\n  window.addEventListener('load', () => {\n    console.log('Page loaded')\n    resolve()\n  })\n})\n\nconst WEBSOCKET = true\nlet _runLoop = true\nlet _connection = null\nPromise.all([ getHardwareConfig, waitForLoad ])\n  .then(([ config ]) => {\n    // set hardware configuration //\n    HardwareManager.config = config\n\n    if (window.setup) {\n      console.log('Running robot setup...')\n      try {\n        window.setup()\n      } catch (error) {\n        addError({ type: 'SETUP', message: error.message })\n      }\n    }\n    // test hardware config //\n    const hwErrors = HardwareManager.validateConfig()\n    if (hwErrors) {\n      for (let i = 0; i < hwErrors.length; i++) {\n        addError(hwErrors[i])\n      }\n    }\n\n    // establish connection //\n    _connection = WEBSOCKET ? new WebSocketConnection() : new AjaxConnection()\n    _connection.onstatechange = (newState, oldState) => {\n      setConnectionState(newState)\n      if (newState === Connection.ERROR) {\n        console.log(_connection.lastError)\n        addError({ type: 'CONNECTION', message: _connection.lastError.message })\n      } else if (oldState === Connection.ERROR) {\n        clearErrors('CONNECTION')\n      }\n    }\n    _connection.onresponsedata = (data) => {\n      HardwareManager.setInputs(data)\n    }\n    // initialize UI //\n    setConnectionState(_connection.state)\n    // initialize control data //\n    _connection.setRobotData(getPacket(HardwareManager.getOutputs()))\n    _connection.start()\n\n    // start the UI control loop //\n    ControlManager.start()\n    ControlManager.onupdate = () => {\n      if (!_runLoop) return\n\n      // call the loop() method to update virtual hardware //\n      if (window.loop) {\n        try {\n          window.loop()\n        } catch (error) {\n          addError({ type: 'LOOP', message: error.message })\n        }\n      }\n      const request = getPacket(HardwareManager.getOutputs())\n      // console.log('request', request)\n      _connection.setRobotData(request)\n    }\n  })\n  .catch(err => console.error('Error loading', err))\n\n// FIXME: get the ghetto-packet for legacy firmware //\nfunction getPacket (json) {\n  return `${json.leftMotor}:${json.rightMotor}:${json.weaponMotor}`\n}\n"],"names":["const","super","let","this"],"mappings":"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"}